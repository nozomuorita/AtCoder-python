"""
・すべての勝負について、勝つ手を出すのが最も良い
・しかし、k個前と同じではいけない
・出す手に影響を与えるのはk個おきの勝負である
・k=2の場合、1, 3, 5, 7回目の勝負において連続して同じ手を出すことはできないが2, 4, 6, 8回目には影響を与えない
・すなわち、k個おきの筐体が出す手を取り出し、勝つためにk個前と同じ手を出さなければならないなら、あきらめるとする
・このとき、あきらめても最適な行動となる。(以下)
・i回目にグーを出して勝ちたいが、k個前と同じものであるためあきらめるとする。このとき、iのk個先で勝つ手がグーであるならi回目の手を変えることによりk個先では勝つことができる
・チョキならば、i回目の手をパーとすることでk個先では勝つことができる。パーならばチョキに変えればよい。
・このように、k個おきの勝負を抜き出して考えて、同じ手を出さなければいけないならあきらめるとすることで最適な結果を得られる。
"""

n, k = map(int, input().split())
r, s, p = map(int, input().split())
t = list(input())

#  勝つ手のポイントを返す
def janken(x):
    if x=='r': return p
    if x=='s': return r
    if x=='p': return s

ans = 0
for i in range(k):
    tmp = t[i::k]                          #  k個おきに筐体の出す手を取り出す
    for j in range(len(tmp)):
        if j==0: ans+=janken(tmp[j])       #  最初はすべての手を出せる(絶対に勝てる)ので勝つ手を出してポイントを得る
        else:
            if tmp[j]==tmp[j-1]:           #  k個前と同じ手ならば、あきらめる(zに置き換えることでその先の判定に影響がないように)
                tmp[j]='z'
                continue
            else:
                ans += janken(tmp[j])      #  勝つための手がk個前と同じでないなら勝ってポイントを足す
            
print(ans)