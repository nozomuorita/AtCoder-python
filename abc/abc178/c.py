mod = 10**9+7
n = int(input())

# dp[i][0]: 長さi-1の整数列で0も9も使用しないパターン数
# dp[i][1]: 長さi-1の整数列で0だけ使用したパターン数
# dp[i][2]: 長さi-1の整数列で9だけ使用したパターン数
# dp[i][3]: 長さi-1の整数列で0と9を使用したパターン数
dp = [[0]*4 for _ in range(n)]
# 初期値
# dp[0][0]: 長さ1で0も9も使用しないものは、{1, 2, 3, ..., 8}なので8
# dp[0][1]: 長さ1で0のみ使用しているのは{0}だけなので、1
# dp[0][2]: 長さ1で9のみ使用しているのは{9}だけなので、1
# dp[0][3]: 長さ1で0も9も使用したパターンは作れないので、0
dp[0][0] = 8
dp[0][1], dp[0][2] = 1, 1
dp[0][3] = 0

for i in range(1, n):
    # dp[i][0]: 0も9も使用しないパターン数は、1~8までの数字でできる数列なので順次8をかけていく(2桁の場合、1桁目は8とおり、2桁目も8とおりなので8*8=64とおり)
    dp[i][0] = (dp[i-1][0] * 8) % mod
    # dp[i][1]: 0のみ使用するパターン数は、長さi-1で0も9も使用していないもの(i番目で0を使用すると0のみを使用した整数列になる)か、長さi-1で0のみ使用しているもの(i番目は9以外ならば良い=0~8の9とおり)
    dp[i][1] = (dp[i-1][0] + (dp[i-1][1] * 9)) % mod
    # dp[i][2]: 9のみ使用するパターン数は、長さi-1で0も9も使用していないもの(i番目で9を使用すると9のみを使用した整数列になる)か、長さi-1で9のみ使用しているもの(i番目は0以外ならば良い=1~9の9とおり)
    dp[i][2] = (dp[i-1][0] + (dp[i-1][2] * 9)) % mod
    # dp[i][3]: 0も9も使用しているパターン数は、長さi-1で0のみ使用したもの(i番目で9を使うことで0と9を使用した整数列になる)か、同様に9のみ使用したものか、0と9を使用したもの(すでに0と9を使用しているので、i番目はなんでもよい(0~9までの10パターンが可能))
    dp[i][3] = (dp[i-1][1] + dp[i-1][2] + (dp[i-1][3]*10)) % mod
    
#print(dp)
print(dp[-1][-1] % mod)